#app para criação de tunnel na web
https://ngrok.com/


#links importantes
github dos codigos de aula
https://github.com/CaelumAulas/react8632

apostila
http://aluno.caelum.com.br/login

#server HTPP
python -m SimpleHTTPServer 8080

#Problema com react no whatcher dos arquivos
CHOKIDAR_USEPOLLING=true

#Esquema de atualização

major.miror.patch
se usar o ^ ele vai atualizar automaticamente as versoes miror e patch
"react": "^16.12.0",

#npm detalhes

tem que usar o RUN para comandos diferentes do start e do test porque isso não foi implementando por padrão

#Compartilhamento de arquivos
https://send.firefox.com/

#Framework mais famoso de Server-Side Rendering
#next.js

#criacao de variavel de ambiente no react
elas precisam comecar com REACT_APP porque o REACT tem uma lista de variaveis de ambiente permitidas..


#explicacao do router
já que deveria ir toda hora buscar do server, pq nao fazer com que o proprio JS faca a renderizacao da pagina toda..entao nao precisa ir buscar novamente o HTML ou outros arquivos do servidor, o proprio JS vai desenhar de novo a tela...

problema vai acontecer agora com o o primeiro carregamento...nao primeira requisicao vai vir apenas o HTML vazio, depois vai vir o script que vai ser pedido novamente para o server, e so entao a pagina vai comecar a carregar...

Nisso, o usuario vai ficar esperando a app carregar, em tela em branco, oq é ruim, ainda mais para dispositivos com capacidade mais baixa (celulares)..alem do carregamento ainda tem o problema do JS ser utulizado para carregar, oq vai consumir recurso de hardware.

Solução não foi criada pela equipe do React, pq eles nao tem interesse em criar a aplicação inteira e sim apenas uma parte da aplicação, então outras empresas que estavam construindo a app inteira pensaram em outra solução, o server-side rendering.

A primeira solução foi voltar ao que era antigamente, ou seja, a linguagem de backEnd vai cuspir um HTML padrão para que no primeiro carregamento o usuário não precise carregar toda a pagina...resolve, porem o react continua na jogada e ai a hora que o react eh carregado, o DOM carregado 

Testes React:
	Kent C. Dods

Service Workers:
	Google Dev Site
	Jake Archibald


usuario e senha do https://twitelum-api.herokuapp.com/login
artdiniz
123456

perguntar do componente so com um DIV

Uma das soluções é a prop de callback

Prop drilling é o problema das prop callback quando tem muito aprofundamento de componentes

take a look https://www.musicdot.com.br/

artur.adam@caelum.com.br